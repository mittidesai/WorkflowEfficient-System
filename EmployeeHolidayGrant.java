/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wfes;

import dal.CheckEmpHolRequestsDAL;
import dal.EmpHCountDAL;
import dal.EmpHolDAL;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import java.util.List;
import javax.swing.SwingUtilities;
import to.EmpHCount;
import to.EmpHol;

/**
 *
 * @author sai
 */
public class EmployeeHolidayGrant extends javax.swing.JPanel {
    EmpHol EmpHolRequestFinal = null;
   

    /**
     * Creates new form EmployeeHolidayGrant
     */
    public EmployeeHolidayGrant() {
        initComponents();
    }
    public EmployeeHolidayGrant(EmpHol EmpHolRequestTempFinal) {
        initComponents();
        this.EmpHolRequestFinal=EmpHolRequestTempFinal;
        
        grantBT.addActionListener(al);
        denyBT.addActionListener(a2);

    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        reasonTA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        grantBT = new javax.swing.JButton();
        denyBT = new javax.swing.JButton();

        reasonTA.setColumns(20);
        reasonTA.setRows(5);
        jScrollPane1.setViewportView(reasonTA);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel1.setText("Reason :");

        grantBT.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        grantBT.setText("Grant");

        denyBT.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        denyBT.setText("Deny");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(grantBT)
                        .addGap(84, 84, 84)
                        .addComponent(denyBT)))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(grantBT)
                    .addComponent(denyBT))
                .addGap(76, 76, 76))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton denyBT;
    private javax.swing.JButton grantBT;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea reasonTA;
    // End of variables declaration//GEN-END:variables

    ActionListener al = new ActionListener() {
        @Override

        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == grantBT) {
              
                EmpHol emphol1 = new EmpHol();
               

                emphol1.setRejReason(reasonTA.getText());

                emphol1.setEhId(EmpHolRequestFinal.getEhId());
                java.util.Date endDate=new Date(EmpHolRequestFinal.getEndDate().getTime());
                java.util.Date stDate=new Date(EmpHolRequestFinal.getStartDate().getTime());
                long temp = (endDate.getTime())-(stDate.getTime());
                long days=0;
                days=temp / (24 * 60 * 60 * 1000);
                days=days+1; 

                int dayscount=(int)days ;

               new CheckEmpHolRequestsDAL().addEmpHolReasonDetails(emphol1);
                EmpHCount emphcount = new EmpHCountDAL().getEmpHCountDetails(3,EmpHolRequestFinal.getEmpId().getEmpId()).get(0);
               if(EmpHolRequestFinal.getFullHalf()==1){
                       
                   
                if(EmpHolRequestFinal.getType1()==100){
                   
                   emphcount.setCOCount(emphcount.getCOCount()-dayscount);
               }
               else if(EmpHolRequestFinal.getType1()==200){
                   emphcount.setMLCount(emphcount.getElCount()-dayscount);
               }
               else if(EmpHolRequestFinal.getType1()==300){
                   emphcount.setLOPCount(emphcount.getLOPCount()-dayscount);
               }
               else if(EmpHolRequestFinal.getType1()==400){
                   emphcount.setElCount(emphcount.getMLCount()-dayscount);
               }
               else if(EmpHolRequestFinal.getType1()==500){
                   emphcount.setSlCount(emphcount.getSlCount()-dayscount);
               }
               else if(EmpHolRequestFinal.getType1()==600){
                   emphcount.setClCount(emphcount.getClCount()-dayscount);
               }
               
               }
               else if(EmpHolRequestFinal.getFullHalf()==2){
                if(EmpHolRequestFinal.getType1()==100){
                   
                   emphcount.setCOCount(emphcount.getCOCount()-0.5);
               }
               else if(EmpHolRequestFinal.getType1()==200){
                   emphcount.setMLCount(emphcount.getElCount()-0.5);
               }
               else if(EmpHolRequestFinal.getType1()==300){
                   emphcount.setLOPCount(emphcount.getLOPCount()-0.5);
               }
               else if(EmpHolRequestFinal.getType1()==400){
                   emphcount.setElCount(emphcount.getMLCount()-0.5);
               }
               else if(EmpHolRequestFinal.getType1()==500){
                   emphcount.setSlCount(emphcount.getSlCount()-0.5);
                    System.out.println("sick leave is:"+emphcount.getSlCount());
               }
               else if(EmpHolRequestFinal.getType1()==600){
                   emphcount.setClCount(emphcount.getClCount()-0.5);
               }
                  
               }

               new EmpHCountDAL().updateEmpHCountDetails(emphcount);

                new CheckEmpHolRequestsDAL().takeAction(1,EmpHolRequestFinal.getEhId());
//                Window w = SwingUtilities.getWindowAncestor(popup.popup.empholgrant);
//                w.setVisible(false);
            }
        }
    };
    ActionListener a2 = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == denyBT) {
                 EmpHol emphol1 = new EmpHol();
                
                emphol1.setRejReason(reasonTA.getText());
                emphol1.setEhId(EmpHolRequestFinal.getEhId());
                new CheckEmpHolRequestsDAL().addEmpHolReasonDetails(emphol1);

                new CheckEmpHolRequestsDAL().takeAction(2,EmpHolRequestFinal.getEhId());
                //new popup.popup().displayEmpholDetail();
            }
        }
    };
    
    

}
