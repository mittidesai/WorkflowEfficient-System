/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wfes;

import Conversion.UtilToSql;
import dal.ConnectionDAL;
import dal.EmployeeDAL;
import dal.PriorityDAL;
import dal.ProjectDAL;
import dal.StatusDAL;
import email.EmailClass;
import email.EmailDetails;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.SwingWorker;
import to.Employee;
import to.Priority;
import to.Project;
import to.Status;

/**
 *
 * @author General
 */
public class ProjectAdd extends javax.swing.JPanel {

    Project project = null;
    Connection connection = new ConnectionDAL().getConnection();

    public ProjectAdd() {
        initComponents();
        clear();

        //fillComboDataStatus(StatusCB);
        fillComboDataPriority(PriorityCB);
        emailMSG.setText("");


        AddButton.addActionListener(al);
        AddButton.addKeyListener(kl);
        AddButton.setNextFocusableComponent(WorkFlowEfficient.wfes.getjMenuBar1());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        AddButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        emailMSG = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        titleVal = new javax.swing.JLabel();
        ClientTF = new javax.swing.JTextField();
        descriptionVal = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        clientVal = new javax.swing.JLabel();
        DescriptionSP = new javax.swing.JScrollPane();
        DescriptionTA = new javax.swing.JTextArea();
        TitleTF = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        priorityVal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        PriorityCB = new javax.swing.JComboBox();
        StartDateDC = new com.toedter.calendar.JDateChooser();
        EndDateDC = new com.toedter.calendar.JDateChooser();
        endDateVal = new javax.swing.JLabel();
        startDateVal = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AddButton.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        AddButton.setForeground(new java.awt.Color(86, 86, 87));
        AddButton.setText("Add");

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(86, 86, 87));
        jLabel1.setText("Add Project Details");

        emailMSG.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        emailMSG.setText("jLabel2");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        titleVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        titleVal.setForeground(new java.awt.Color(255, 0, 0));
        titleVal.setText("jLabel15");

        ClientTF.setNextFocusableComponent(StartDateDC);

        descriptionVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        descriptionVal.setForeground(new java.awt.Color(255, 0, 0));
        descriptionVal.setText("jLabel16");

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(86, 86, 87));
        jLabel3.setText("Title :");

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(86, 86, 87));
        jLabel4.setText("Description :");

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(86, 86, 87));
        jLabel5.setText("Client :");

        clientVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        clientVal.setForeground(new java.awt.Color(255, 0, 0));
        clientVal.setText("jLabel17");

        DescriptionTA.setColumns(20);
        DescriptionTA.setRows(5);
        DescriptionTA.setNextFocusableComponent(ClientTF);
        DescriptionSP.setViewportView(DescriptionTA);

        TitleTF.setNextFocusableComponent(DescriptionTA);

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(jLabel3)
                    .add(jLabel5))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(DescriptionSP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(TitleTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ClientTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, descriptionVal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(titleVal, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(clientVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(52, 52, 52))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(TitleTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(titleVal)
                    .add(jLabel3))
                .add(37, 37, 37)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel4)
                    .add(descriptionVal)
                    .add(DescriptionSP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 25, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(ClientTF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(clientVal)
                    .add(jLabel5))
                .add(23, 23, 23))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(86, 86, 87));
        jLabel9.setText("Priority :");

        priorityVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        priorityVal.setForeground(new java.awt.Color(255, 0, 0));
        priorityVal.setText("jLabel15");

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(86, 86, 87));
        jLabel6.setText("Start_Date :");

        PriorityCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        PriorityCB.setNextFocusableComponent(AddButton);

        StartDateDC.setNextFocusableComponent(EndDateDC);

        EndDateDC.setNextFocusableComponent(PriorityCB);

        endDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        endDateVal.setForeground(new java.awt.Color(255, 0, 0));
        endDateVal.setText("jLabel19");

        startDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        startDateVal.setForeground(new java.awt.Color(255, 0, 0));
        startDateVal.setText("jLabel18");

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(86, 86, 87));
        jLabel7.setText("End_Date :");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(4, 4, 4)
                        .add(jLabel9)
                        .add(26, 26, 26)
                        .add(PriorityCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(priorityVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                        .add(jLabel6)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(StartDateDC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 208, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(startDateVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 112, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(52, 52, 52))
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jLabel7)
                        .add(18, 18, 18)
                        .add(EndDateDC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 203, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(endDateVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 133, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(startDateVal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(StartDateDC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(66, 66, 66)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 14, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(endDateVal)
                    .add(EndDateDC, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(PriorityCB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(priorityVal))
                .add(22, 22, 22))
        );

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(AddButton)
                .add(26, 26, 26)
                .add(emailMSG, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 201, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(219, 219, 219))
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(299, 299, 299)
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 463, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 463, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(jLabel1)
                .add(32, 32, 32)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jPanel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 59, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(AddButton)
                    .add(emailMSG))
                .add(55, 55, 55))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextField ClientTF;
    private javax.swing.JScrollPane DescriptionSP;
    private javax.swing.JTextArea DescriptionTA;
    private com.toedter.calendar.JDateChooser EndDateDC;
    private javax.swing.JComboBox PriorityCB;
    private com.toedter.calendar.JDateChooser StartDateDC;
    private javax.swing.JTextField TitleTF;
    private javax.swing.JLabel clientVal;
    private javax.swing.JLabel descriptionVal;
    private javax.swing.JLabel emailMSG;
    private javax.swing.JLabel endDateVal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel priorityVal;
    private javax.swing.JLabel startDateVal;
    private javax.swing.JLabel titleVal;
    // End of variables declaration//GEN-END:variables

    public void addButtonMethod()
    {
          if (validation()) {
                    Project projecttemp = new Project();



                    projecttemp.setTitle(TitleTF.getText());
                    projecttemp.setDescription(DescriptionTA.getText());
                    projecttemp.setClient(ClientTF.getText());
                    projecttemp.setStartDate(new UtilToSql().convertUtilToSql(StartDateDC.getDate()));
                    projecttemp.setEndDate(new UtilToSql().convertUtilToSql(EndDateDC.getDate()));
//                    projecttemp.setStatus(((Status) StatusCB.getSelectedItem()).getStatusId());
                    projecttemp.setPriority(((Priority) PriorityCB.getSelectedItem()).getPriId());




                    projecttempemail=projecttemp;
                    i=0;
                    i = new ProjectDAL().addProjectDetails(projecttemp);


                    SwingWorker worker = new SwingWorker<Void, Void>() {
                        @Override
                        protected Void doInBackground() throws Exception {
                            
                            emailMSG.setText("Kindly wait mail is being sent...");
                            
                            Employee employeeTempFinal = null;
                            List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();
                            String emailList[] = new String[50];
                            int emlcnt = 0;

                            for (Employee employeeTemp : employeeList) {

                                if (employeeTemp.getDsgnId().getDsgnTitle().equals("DEPUTY GENERAL MANAGER")) {
                                    emailList[emlcnt] = employeeTemp.getEmailId();
                                    emlcnt++;
                                }
                            }


                            if (i > 0) {
                                EmailDetails emailDetails = new EmailDetails();
                                emailDetails.setTo(emailList);
                                emailDetails.setFrom("workflowefficientsystem@gmail.com");
                                emailDetails.setSubject("New Project:" + projecttempemail.getTitle());
                                emailDetails.setMessage("Please allocate Project Manager for project:" + projecttempemail.getTitle());
                              //  emailDetails.setAttachFiles(null);
                                new EmailClass().sendEmail(emailDetails);
                            }


                            System.out.println("Done");
                            emailMSG.setText("Mail Sent");
                            return null;
                        }
                    };
                    
                    worker.execute();





                }
    }
    void fillComboDataStatus(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Status> statusList = new StatusDAL().getStatusDetails();
        Status statusTempFinal = null;
        for (Status statusTemp : statusList) {

            vector.add(statusTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataPriority(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Priority> priorityList = new PriorityDAL().getPriorityDetails();
        Priority priorityTempFinal = null;
        for (Priority priorityTemp : priorityList) {

            vector.add(priorityTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }
      public static Project projecttempemail=new Project();
      public static int i =0;
    ActionListener al = new ActionListener() {
      
        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == AddButton) {
              addButtonMethod();
            }
        }
    };
     KeyListener kl = new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource() == AddButton && e.getKeyCode() == KeyEvent.VK_ENTER) {
                addButtonMethod();
            }
            
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };

    void clear() {

        titleVal.setText("");
        descriptionVal.setText("");
        clientVal.setText("");
        startDateVal.setText("");
        endDateVal.setText("");
//        statusVal.setText("");
        priorityVal.setText("");


    }

    boolean validation() {
        boolean flag = true;
        clear();


        if (TitleTF.getText().equals("")) {
            titleVal.setText("Please enter Title");
            flag = false;
        }
        if (DescriptionTA.getText().equals("")) {
            descriptionVal.setText("Please enter description");
            flag = false;
        }

        if (ClientTF.getText().equals("")) {
            clientVal.setText("Please enter Client");
            flag = false;
        }
        if (StartDateDC.getDate() == null) {
            startDateVal.setText("Please enter Start Date");
            flag = false;
        }
        if (EndDateDC.getDate() == null) {
            endDateVal.setText("Please enter End Date");
            flag = false;
        }
//        if (StatusCB.getSelectedIndex() == -1) {
//            statusVal.setText("Please enter Status");
//            flag = false;
//        }
        if (PriorityCB.getSelectedIndex() == -1) {
            priorityVal.setText("Please enter Priority");
            flag = false;
        }





        return flag;
    }
}
