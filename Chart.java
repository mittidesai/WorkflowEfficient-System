/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wfes;

import dal.EmployeeDAL;
import dal.ProjEmpDal;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import org.jfree.ui.RefineryUtilities;
import to.Department;
import to.Designation;
import to.Employee;
import to.ProjEmp;
import to.Project;

/**
 *
 * @author hp pav 15-e015tx
 */
public class Chart extends javax.swing.JPanel {

    /**
     * Creates new form Chart
     */
    public Chart() {
        initComponents();



        projectselLB.setVisible(false);
        empselLB.setVisible(false);
        projCB.setVisible(false);
        employeeCB.setVisible(false);
        chartBT.setVisible(false);
        dgmLB.setVisible(false);
        jPanel3.setVisible(false);


        if (LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("DEPUTY GENERAL MANAGER") || LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("GENERAL MANAGER")) {
            jPanel3.setVisible(true);
            jPanel2.setVisible(false);
            dgmLB.setVisible(true);
            chartBT.setVisible(true);
        }


        empRB.addActionListener(a1);
        projRB.addActionListener(a1);
        teamPerInProjRB.addActionListener(a1);

//          projCB.addActionListener(a2);
//          employeeCB.addActionListener(a2);

        chartBT.addActionListener(a3);
        chartBT.addKeyListener(k2);



    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        floatDimension1 = new org.jfree.ui.FloatDimension();
        dayAndMonthRule1 = new org.jfree.date.DayAndMonthRule();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        projCB = new javax.swing.JComboBox();
        projectselLB = new javax.swing.JLabel();
        empselLB = new javax.swing.JLabel();
        employeeCB = new javax.swing.JComboBox();
        chartBT = new javax.swing.JButton();
        dgmLB = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        typeOfChartLB = new javax.swing.JLabel();
        empRB = new javax.swing.JRadioButton();
        projRB = new javax.swing.JRadioButton();
        empChrtLB = new javax.swing.JLabel();
        projChrtLB = new javax.swing.JLabel();
        teamPerInProjLB = new javax.swing.JLabel();
        teamPerInProjRB = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        pieRB = new javax.swing.JRadioButton();
        barRB = new javax.swing.JRadioButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 0), new java.awt.Dimension(5, 32767));

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        projCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        projCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        projectselLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        projectselLB.setText("Project:");

        empselLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        empselLB.setText("Employee:");

        employeeCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        employeeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        chartBT.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        chartBT.setText("View Chart");

        dgmLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        dgmLB.setText("                                          Chart for Analysing Project Duration:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(dgmLB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(projectselLB, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(empselLB))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(projCB, 0, 279, Short.MAX_VALUE)
                            .addComponent(employeeCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(chartBT, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(projCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(projectselLB))
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(empselLB)
                    .addComponent(employeeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addComponent(dgmLB)
                .addGap(44, 44, 44)
                .addComponent(chartBT)
                .addContainerGap(153, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        typeOfChartLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        typeOfChartLB.setText("Type Of Chart:");

        buttonGroup1.add(empRB);

        buttonGroup1.add(projRB);

        empChrtLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        empChrtLB.setText("Employee Chart:");

        projChrtLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        projChrtLB.setText("Project Chart:");

        teamPerInProjLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        teamPerInProjLB.setText("Team Performane in a project:");

        buttonGroup1.add(teamPerInProjRB);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(typeOfChartLB, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(projChrtLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(empChrtLB, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))
                            .addComponent(teamPerInProjLB))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(teamPerInProjRB)
                            .addComponent(empRB)
                            .addComponent(projRB))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(typeOfChartLB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(projRB)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(empRB)
                            .addComponent(empChrtLB))
                        .addGap(46, 46, 46)
                        .addComponent(projChrtLB)))
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(teamPerInProjLB)
                    .addComponent(teamPerInProjRB))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 24)); // NOI18N
        jLabel2.setText("Charts:");

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel1.setText("View As:");

        buttonGroup2.add(pieRB);
        pieRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        pieRB.setText("Pie Chart");

        buttonGroup2.add(barRB);
        barRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        barRB.setText("Bar Chart");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(barRB)
                            .addComponent(pieRB))))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pieRB)
                .addGap(18, 18, 18)
                .addComponent(barRB)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel2)
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 347, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton barRB;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton chartBT;
    private org.jfree.date.DayAndMonthRule dayAndMonthRule1;
    private javax.swing.JLabel dgmLB;
    private javax.swing.JLabel empChrtLB;
    private javax.swing.JRadioButton empRB;
    private javax.swing.JComboBox employeeCB;
    private javax.swing.JLabel empselLB;
    private javax.swing.Box.Filler filler1;
    private org.jfree.ui.FloatDimension floatDimension1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton pieRB;
    private javax.swing.JComboBox projCB;
    private javax.swing.JLabel projChrtLB;
    private javax.swing.JRadioButton projRB;
    private javax.swing.JLabel projectselLB;
    private javax.swing.JLabel teamPerInProjLB;
    private javax.swing.JRadioButton teamPerInProjRB;
    private javax.swing.JLabel typeOfChartLB;
    // End of variables declaration//GEN-END:variables

    public void chartBtMethod() {
        if (barRB.isSelected()) {

            if (LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("DEPUTY GENERAL MANAGER") || LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("GENERAL MANAGER")) {
                final BarChartDemo demo = new BarChartDemo("Project Analysis");
                demo.projectdurationcall("Project Analysis");
                demo.pack();
                RefineryUtilities.centerFrameOnScreen(demo);
                demo.setVisible(true);

            } else {


                if (empRB.isSelected()) {
                    final BarChartDemo demo = new BarChartDemo("Employee Performance");
                    demo.employeeperformanceinallprojectscall("Team Performance", (Employee) employeeCB.getSelectedItem());
                    demo.pack();
                    RefineryUtilities.centerFrameOnScreen(demo);
                    demo.setVisible(true);
                }
                if (teamPerInProjRB.isSelected()) {
                    final BarChartDemo demo = new BarChartDemo("Team Performance");
                    demo.employeeperformancecall("Team Performance", (Project) projCB.getSelectedItem());
                    demo.pack();
                    RefineryUtilities.centerFrameOnScreen(demo);
                    demo.setVisible(true);
                }
                if (projRB.isSelected()) {
                    final BarChartDemo demo = new BarChartDemo("Task Comparision");
                    demo.taskcomparisioncall("Task Comparision", (Project) projCB.getSelectedItem());
                    demo.pack();
                    RefineryUtilities.centerFrameOnScreen(demo);
                    demo.setVisible(true);
                }
            }
        }


        if (pieRB.isSelected()) {

            if (LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("DEPUTY GENERAL MANAGER") || LogIn.localempid.getDsgnId().getDsgnTitle().toString().equals("GENERAL MANAGER")) {
                PieChart demo = new PieChart("Project Analysis", "Chart");
                demo.projectdurationcall("Project Analysis");
                demo.pack();
                demo.setVisible(true);

            } else {





                if (empRB.isSelected()) {
                    PieChart demo = new PieChart("Employee Perfomance", "Chart");
                    demo.employeeperformanceinallprojectscall("Employee Perfomance", (Employee) employeeCB.getSelectedItem());
                    demo.pack();
                    demo.setVisible(true);
                }
                if (teamPerInProjRB.isSelected()) {
                    PieChart demo = new PieChart("Employee Comparison", "Chart");
                    demo.employeeperformancecall("Employee Comparision", (Project) projCB.getSelectedItem());
                    demo.pack();
                    demo.setVisible(true);

                }
                if (projRB.isSelected()) {
                    PieChart demo = new PieChart("Project Comparison", "Chart");
                    demo.taskcomparisioncall("Project Comparison", (Project) projCB.getSelectedItem());
                    demo.pack();
                    demo.setVisible(true);
                }
            }
        }
    }

    void fillComboDataProject() {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<ProjEmp> projEmpList = new ProjEmpDal().getProjEmpDetails();
        ProjEmp projEmpTempFinal = null;
        for (ProjEmp projEmpTemp : projEmpList) {
            if (projEmpTemp.getProjId().getDeleteFlag() == 0 && projEmpTemp.getEmpId().getEmpId() == LogIn.localempid.getEmpId()) {
//                if (new ProjectCompletion().getProjCompPercent(projectTemp) != 100) {

                vector.add(projEmpTemp.getProjId());
//                }
            }
        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        projCB.setModel(cbm);
    }

    void fillComboDataEmployee() {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();


        Employee emplocal = LogIn.localempid;
        Department department = emplocal.getDeptId();
        Designation designation = emplocal.getDsgnId();

        for (Employee employeeTemp : employeeList) {

            if (employeeTemp.getDeptId().getDeptId() == department.getDeptId()) {
                if (employeeTemp.getDsgnId().getDsgnTitle().toString().equals("JUNIOR EXECUTIVE")) {
                    vector.add(employeeTemp);
                }

            }


        }


        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        employeeCB.setModel(cbm);

    }
    ActionListener a1 = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            jPanel3.setVisible(true);
            if (e.getSource() == empRB) {
                empselLB.setVisible(true);
                fillComboDataEmployee();


                employeeCB.setVisible(true);
                projectselLB.setVisible(false);
                projCB.setVisible(false);
                chartBT.setVisible(true);
            }

            if (e.getSource() == projRB) {
                projectselLB.setVisible(true);
                fillComboDataProject();





                projCB.setVisible(true);
                empselLB.setVisible(false);
                employeeCB.setVisible(false);
                chartBT.setVisible(true);
            }
            if (e.getSource() == teamPerInProjRB) {
                projectselLB.setVisible(true);
                fillComboDataProject();





                projCB.setVisible(true);
                empselLB.setVisible(false);
                employeeCB.setVisible(false);
                chartBT.setVisible(true);
            }

        }
    };
//ActionListener a2 = new ActionListener() {
//
//        @Override
//        public void actionPerformed(ActionEvent e) {
//           
//        }
//    };
    ActionListener a3 = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == chartBT) {
                chartBtMethod();

            }
        }
    };
    KeyListener k2 = new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource() == chartBT) {

                chartBtMethod();
            }

        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };
}
