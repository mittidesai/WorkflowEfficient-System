package wfes;

import Conversion.UtilToSql;
import dal.*;
import java.awt.Component;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.FocusTraversalPolicy;
import java.awt.GridBagLayout;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import to.*;
import validation.*;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 01
 */
public class EmployeeAdd extends javax.swing.JPanel {

    /**
     * Creates new form AddEmployee
     */
     static FocusTraversalDemo.MyOwnFocusTraversalPolicy newPolicy;
    public EmployeeAdd() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        int width = screenSize.width, height = screenSize.height;
        int wpanel=jPanel1.getX();
        int hpanel=jPanel1.getY();
        int wdiff=width-wpanel;
        int hdiff=height-hpanel;
        System.out.println("wdiff"+wdiff+"wpanel"+wpanel);
        System.out.println("hdiff"+hdiff+"hpanel"+hpanel);
        jPanel1.setLocation(wdiff/2, hdiff/2);
        jPanel1.setBounds(0, 0, width, height);
      
       // jPanel1.setLayout(new GridBagLayout(0,0,));

        //jPanel1.setLocation;
        
       
        clear();

        Dimension d = new Dimension(1500, 500);
        this.setPreferredSize(d);
        System.out.println(this.getPreferredSize());




        fillComboDataDept(DeptCB);
        fillComboDataDsgn(DsgnCB);
        fillComboDataTeam(TeamCB);
        AddButton.addActionListener(al);
        DeptCB.addActionListener(al);
        DsgnCB.addItemListener(il);



        ProjectLeaderCB.setVisible(false);
        ProjectLeaderLB.setVisible(false);
        AddButton.addKeyListener(kl);
        AddButton.setNextFocusableComponent(WorkFlowEfficient.wfes.getjMenuBar1());
        
       


    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        EmpNameVal = new javax.swing.JLabel();
        EmpNameTF = new javax.swing.JTextField();
        AddressVal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressTA = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        femaleRB = new javax.swing.JRadioButton();
        genderLB = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        CityTF = new javax.swing.JTextField();
        dobDC = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        dobVal = new javax.swing.JLabel();
        CityVal = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        maleRB = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        EmailIdTF = new javax.swing.JTextField();
        EmailIdVal1 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        EmailIdVal2 = new javax.swing.JLabel();
        MobileNoVal2 = new javax.swing.JLabel();
        MobileNoVal1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        MobileNoTF = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        QualificationTF = new javax.swing.JTextField();
        ProjectLeaderLB = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        joinDateDC = new com.toedter.calendar.JDateChooser();
        JoinDateVal = new javax.swing.JLabel();
        TeamLB = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        DeptCB = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        TeamVal = new javax.swing.JLabel();
        ProjectLeaderCB = new javax.swing.JComboBox();
        ProjectLeaderVal = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TeamCB = new javax.swing.JComboBox();
        DsgnVal = new javax.swing.JLabel();
        DeptVal = new javax.swing.JLabel();
        QualificationVal = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        DsgnCB = new javax.swing.JComboBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        PasswordPF = new javax.swing.JPasswordField();
        UsernameTF = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        UsernameVal = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        PasswordVal = new javax.swing.JLabel();
        AddButton = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel13.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(86, 86, 87));
        jLabel13.setText("Add Employee Form");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        EmpNameVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        EmpNameVal.setForeground(new java.awt.Color(255, 0, 0));
        EmpNameVal.setText("EmpNameVal");

        EmpNameTF.setFocusAccelerator('E');
        EmpNameTF.setFocusCycleRoot(true);
        EmpNameTF.setFocusTraversalPolicyProvider(true);
        EmpNameTF.setNextFocusableComponent(dobDC);

        AddressVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        AddressVal.setForeground(new java.awt.Color(255, 0, 0));
        AddressVal.setText("AddressVal");

        AddressTA.setColumns(20);
        AddressTA.setRows(5);
        AddressTA.setFocusTraversalPolicyProvider(true);
        AddressTA.setNextFocusableComponent(CityTF);
        jScrollPane1.setViewportView(AddressTA);

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel1.setText("Employee Name :");

        jLabel16.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(86, 86, 87));
        jLabel16.setText("Personal Details");

        buttonGroup1.add(femaleRB);
        femaleRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        femaleRB.setText("Female");
        femaleRB.setFocusTraversalPolicyProvider(true);
        femaleRB.setNextFocusableComponent(AddressTA);

        genderLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        genderLB.setText("Gender :");

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel7.setText("City :");

        CityTF.setFocusTraversalPolicyProvider(true);
        CityTF.setNextFocusableComponent(MobileNoTF);

        dobDC.setFocusTraversalPolicyProvider(true);
        dobDC.setNextFocusableComponent(femaleRB);

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel4.setText("Date Of Birth :");

        dobVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        dobVal.setForeground(new java.awt.Color(255, 0, 0));
        dobVal.setText("dobVal");

        CityVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        CityVal.setForeground(new java.awt.Color(255, 0, 0));
        CityVal.setText("CityVal");

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel6.setText("Address :");

        buttonGroup1.add(maleRB);
        maleRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        maleRB.setText("Male");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderLB))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(maleRB)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(femaleRB))
                                .addComponent(CityTF)
                                .addComponent(EmpNameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(AddressVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(CityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dobVal, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                            .addComponent(EmpNameTF)
                            .addComponent(dobDC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel16))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addGap(3, 3, 3)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(EmpNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dobDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dobVal)
                        .addGap(8, 8, 8)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderLB)
                            .addComponent(maleRB)
                            .addComponent(femaleRB)))
                    .addComponent(EmpNameVal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddressVal)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(4, 4, 4)
                .addComponent(CityVal)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel3.setText("Email_ID :");

        EmailIdTF.setFocusTraversalPolicyProvider(true);
        EmailIdTF.setNextFocusableComponent(QualificationTF);

        EmailIdVal1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        EmailIdVal1.setForeground(new java.awt.Color(255, 0, 0));
        EmailIdVal1.setText("EmailIDVal1");

        jLabel17.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(86, 86, 87));
        jLabel17.setText("Contact Details");

        EmailIdVal2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        EmailIdVal2.setForeground(new java.awt.Color(255, 0, 0));
        EmailIdVal2.setText("EmailIdVal2");

        MobileNoVal2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        MobileNoVal2.setForeground(new java.awt.Color(255, 0, 0));
        MobileNoVal2.setText("MobileNoVal2");

        MobileNoVal1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        MobileNoVal1.setForeground(new java.awt.Color(255, 0, 0));
        MobileNoVal1.setText("MobileNoVal1");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel2.setText("Mobile No :");

        MobileNoTF.setFocusTraversalPolicyProvider(true);
        MobileNoTF.setNextFocusableComponent(EmailIdTF);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EmailIdVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailIdVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmailIdTF)
                            .addComponent(MobileNoTF)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MobileNoVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MobileNoVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MobileNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MobileNoVal1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MobileNoVal2)
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EmailIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailIdVal1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(EmailIdVal2)
                .addGap(51, 51, 51))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        QualificationTF.setFocusTraversalPolicyProvider(true);
        QualificationTF.setNextFocusableComponent(joinDateDC);

        ProjectLeaderLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 11)); // NOI18N
        ProjectLeaderLB.setText("Project Leader:");

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel5.setText("Qualification :");

        joinDateDC.setFocusTraversalPolicyProvider(true);
        joinDateDC.setNextFocusableComponent(DeptCB);

        JoinDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        JoinDateVal.setForeground(new java.awt.Color(255, 0, 0));
        JoinDateVal.setText("JoinDateVal");

        TeamLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        TeamLB.setText("Team :");

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel8.setText("Join Date :");

        DeptCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        DeptCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DeptCB.setFocusTraversalPolicyProvider(true);
        DeptCB.setNextFocusableComponent(DsgnCB);

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel9.setText("Department :");

        TeamVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        TeamVal.setForeground(new java.awt.Color(255, 0, 0));
        TeamVal.setText("TeamVal");

        ProjectLeaderCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        ProjectLeaderCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ProjectLeaderCB.setFocusTraversalPolicyProvider(true);
        ProjectLeaderCB.setNextFocusableComponent(UsernameTF);

        ProjectLeaderVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        ProjectLeaderVal.setForeground(new java.awt.Color(255, 0, 0));
        ProjectLeaderVal.setText("ProjectLeaderVal");

        jLabel19.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(86, 86, 87));
        jLabel19.setText("Organizational Details");

        TeamCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        TeamCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        TeamCB.setFocusTraversalPolicyProvider(true);
        TeamCB.setNextFocusableComponent(ProjectLeaderCB);

        DsgnVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        DsgnVal.setForeground(new java.awt.Color(255, 0, 0));
        DsgnVal.setText("DsgnVal");

        DeptVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        DeptVal.setForeground(new java.awt.Color(255, 0, 0));
        DeptVal.setText("DeptVal");

        QualificationVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        QualificationVal.setForeground(new java.awt.Color(255, 0, 0));
        QualificationVal.setText("QualificationVal");

        jLabel10.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel10.setText("Designation :");

        DsgnCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        DsgnCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DsgnCB.setFocusTraversalPolicyProvider(true);
        DsgnCB.setNextFocusableComponent(TeamCB);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(QualificationVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JoinDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(QualificationTF)
                                            .addComponent(joinDateDC, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)))
                                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DeptCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(101, 101, 101)
                                        .addComponent(DeptVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TeamLB, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)
                                    .addComponent(ProjectLeaderLB, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                                .addGap(7, 7, 7)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TeamCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(ProjectLeaderCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ProjectLeaderVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(TeamVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))))
                        .addGap(20, 20, 20))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(DsgnVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(DsgnCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(QualificationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(QualificationVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(joinDateDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JoinDateVal)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeptCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DeptVal)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DsgnCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DsgnVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TeamCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TeamLB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TeamVal)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProjectLeaderLB)
                    .addComponent(ProjectLeaderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ProjectLeaderVal)
                .addGap(19, 19, 19))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel18.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(86, 86, 87));
        jLabel18.setText("Login Details");

        PasswordPF.setFocusTraversalPolicyProvider(true);
        PasswordPF.setNextFocusableComponent(AddButton);

        UsernameTF.setFocusTraversalPolicyProvider(true);
        UsernameTF.setNextFocusableComponent(PasswordPF);

        jLabel15.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel15.setText("Password:");

        UsernameVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        UsernameVal.setForeground(new java.awt.Color(255, 0, 0));
        UsernameVal.setText("UsernameVal");

        jLabel14.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel14.setText("Username:");

        PasswordVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 10)); // NOI18N
        PasswordVal.setForeground(new java.awt.Color(255, 0, 0));
        PasswordVal.setText("PasswordVal");

        AddButton.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        AddButton.setForeground(new java.awt.Color(86, 86, 87));
        AddButton.setText("Add Employee");
        AddButton.setFocusTraversalPolicyProvider(true);
        AddButton.setNextFocusableComponent(getRootPane());

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel15))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UsernameTF)
                            .addComponent(PasswordPF)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PasswordVal)
                                    .addComponent(UsernameVal))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(AddButton)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(9, 9, 9)
                .addComponent(UsernameVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(PasswordPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PasswordVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(AddButton)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabel13)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(172, 172, 172))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 919, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JTextArea AddressTA;
    private javax.swing.JLabel AddressVal;
    private javax.swing.JTextField CityTF;
    private javax.swing.JLabel CityVal;
    private javax.swing.JComboBox DeptCB;
    private javax.swing.JLabel DeptVal;
    private javax.swing.JComboBox DsgnCB;
    private javax.swing.JLabel DsgnVal;
    private javax.swing.JTextField EmailIdTF;
    private javax.swing.JLabel EmailIdVal1;
    private javax.swing.JLabel EmailIdVal2;
    private javax.swing.JTextField EmpNameTF;
    private javax.swing.JLabel EmpNameVal;
    private javax.swing.JLabel JoinDateVal;
    private javax.swing.JTextField MobileNoTF;
    private javax.swing.JLabel MobileNoVal1;
    private javax.swing.JLabel MobileNoVal2;
    private javax.swing.JPasswordField PasswordPF;
    private javax.swing.JLabel PasswordVal;
    private javax.swing.JComboBox ProjectLeaderCB;
    private javax.swing.JLabel ProjectLeaderLB;
    private javax.swing.JLabel ProjectLeaderVal;
    private javax.swing.JTextField QualificationTF;
    private javax.swing.JLabel QualificationVal;
    private javax.swing.JComboBox TeamCB;
    private javax.swing.JLabel TeamLB;
    private javax.swing.JLabel TeamVal;
    private javax.swing.JTextField UsernameTF;
    private javax.swing.JLabel UsernameVal;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dobDC;
    private javax.swing.JLabel dobVal;
    private javax.swing.JRadioButton femaleRB;
    private javax.swing.JLabel genderLB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser joinDateDC;
    private javax.swing.JRadioButton maleRB;
    // End of variables declaration//GEN-END:variables

    
    public void addButtonMethod(){
        
                if (validation()) {
                    Employee employee = new Employee();
                    Department department = new Department();
                    Designation designation = new Designation();
                    Team team = new Team();
                    EmpHCount emphcount = new EmpHCount();
                    employee.setEmpName(EmpNameTF.getText());
                    employee.setMobileNo(Long.parseLong(MobileNoTF.getText()));
                    employee.setEmailId(EmailIdTF.getText());
                    employee.setDob(new UtilToSql().convertUtilToSql(dobDC.getDate()));
                    employee.setQualification(QualificationTF.getText());
                    employee.setUsername(UsernameTF.getText());
                    employee.setPassword(PasswordPF.getText());
                    employee.setAddress(AddressTA.getText());
                    employee.setJoinDate(new UtilToSql().convertUtilToSql(joinDateDC.getDate()));
                    employee.setCity(CityTF.getText());
                   // employee.setGender(buttonGroup1.getSelection().toString());
                    department = (Department) DeptCB.getSelectedItem();
                    employee.setDeptId(department);
                    
                    designation = (Designation) DsgnCB.getSelectedItem();
                    employee.setDsgnId(designation);


                    team = (Team) TeamCB.getSelectedItem();
                    employee.setTeamId(team);
                    if(maleRB.isSelected()){
                        employee.setGender(1);
                    }else{
                        employee.setGender(2);
                    }
                    



                    int i = new EmployeeDAL().addEmployeeDetails(employee);


                    if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ASSISTANT MANAGER")) {
                        PlTl plTl = new PlTl();
                        plTl.setPlId((Employee) ProjectLeaderCB.getSelectedItem());

                        List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();
                        Employee employeeTempFinal = null;
                        for (Employee employeeTemp : employeeList) {
                            if (employeeTemp.getEmpId() == i) {
                                employeeTempFinal = employeeTemp;
                            }
                        }
                        plTl.setTlId(employeeTempFinal);
                        new PlTlDal().addPlTlDetails(plTl);



//                        Team team1 = new Team();
//                        team1.setTeamId(((Team) TeamCB.getSelectedItem()).getTeamId());



//                        team1.setTlId(employeeTempFinal);
//                        new TeamDAL().updateTeamTL(team1);

                    }







                    System.out.println("Done");
                    List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();
                    Employee employeeTempFinal = null;

                    for (Employee employeeTemp : employeeList) {
                        if (employeeTemp.getEmpId() == i) {
                            employeeTempFinal = employeeTemp;
                        }
                    }

                    System.out.println(employeeTempFinal.getEmpId());
                    emphcount.setEmpId(employeeTempFinal);
                    emphcount.setCOCount(8.0);
                    emphcount.setClCount(8.0);
                    emphcount.setElCount(8.0);
                    emphcount.setLOPCount(8.0);
                    if(maleRB.isSelected()){
                        emphcount.setMLCount(15.0);
                    }
                    else{
                        emphcount.setMLCount(40.0);
                    }
                        
                    emphcount.setSlCount(8.0);

                    System.out.println(emphcount.getEmpId().getEmpId());
                    new EmpHCountDAL().addEmpHCountDetails(emphcount);

                }
    }
    void fillComboDataDept(JComboBox jComboBox) {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<Department> departmentList = new DepartmentDAL().getDepartmentDetails();
        Department departmentTempFinal = null;
        for (Department departmentTemp : departmentList) {

            vector.add(departmentTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataDsgn(JComboBox jComboBox) {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<Designation> designationList = new DesignationDAL().getDesignationDetails();
        Designation designationTempFinal = null;
        for (Designation designationTemp : designationList) {

            vector.add(designationTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataTeam(JComboBox jComboBox) {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<Team> teamList = new TeamDAL().getTeamDetails();
        Team teamTempFinal = null;
        for (Team teamTemp : teamList) {

            vector.add(teamTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataProjectLeader() {
        int flag = 0;
        Vector vector = new Vector();
        vector.add("Please Enter");
        Department department;
        System.out.println("Here:" + DeptCB.getSelectedItem());
        department = (Department) (DeptCB.getSelectedItem());

        Employee employeeTempFinal = null;
        List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();

        for (Employee employeeTemp : employeeList) {

            if (employeeTemp.getDeptId().getDeptId() == department.getDeptId() && employeeTemp.getDsgnId().getDsgnId() == 4) {
                employeeTempFinal = employeeTemp;
                vector.add(employeeTempFinal);
                flag = 1;

            }
        }

        if (flag == 0) {
            ProjectLeaderLB.setText("No Project Manager in " + department.getDeptName());
            Vector vector1 = new Vector();
            vector1.add("No Project Manager");
            ComboBoxModel cbm = new DefaultComboBoxModel(vector1);
            ProjectLeaderCB.setModel(cbm);
            ProjectLeaderCB.setSelectedIndex(-1);
            ProjectLeaderCB.setVisible(false);
        }


        if (flag == 1) {
            ProjectLeaderLB.setText("Project Manager:");
            ComboBoxModel cbm = new DefaultComboBoxModel(vector);
            ProjectLeaderCB.setModel(cbm);
        }

    }
    ActionListener al = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {

            if (e.getSource() == DeptCB) {
                Vector vector = new Vector();
                vector.add("Please Enter");
                List<Team> teamList = new TeamDAL().getTeamDetails();
                Team teamTempFinal = null;
                for (Team teamTemp : teamList) {


                    if (teamTemp.getDeptId().getDeptId() == ((Department) DeptCB.getSelectedItem()).getDeptId()) {
                        vector.add(teamTemp);
                    }

                }
                ComboBoxModel cbm = new DefaultComboBoxModel(vector);
                TeamCB.setModel(cbm);
            }





            if (e.getSource() == AddButton) {
           addButtonMethod();
            }


        }
    };
     KeyListener kl = new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource() == AddButton && e.getKeyCode() == KeyEvent.VK_ENTER) {
                addButtonMethod();
            }
            
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };
    
    ItemListener il = new ItemListener() {
        @Override
        public void itemStateChanged(ItemEvent e) {





            if (e.getSource() == DsgnCB) {
                if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("GENERAL MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("DEPUTY GENERAL MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("PROJECT MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ASSISTANT MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ADMINISTRATOR")) {


                    Team teamTempFinal = null;
                    List<Team> teamList = new TeamDAL().getTeamDetails();

                    for (Team teamTemp : teamList) {

                        if (teamTemp.getTeamName().equals("MANAGEMENT")) {
                            teamTempFinal = teamTemp;
                        }
                    }
                    System.out.println("check" + teamTempFinal.getTeamId());
                    //TeamCB.setSelectedIndex(2);
                    TeamCB.setSelectedItem(teamTempFinal);
                    //TeamCB.setEnabled(false);

                    if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ASSISTANT MANAGER")) {
                        ProjectLeaderLB.setVisible(true);
                        ProjectLeaderCB.setVisible(true);
                        fillComboDataProjectLeader();

                    } else {
                        ProjectLeaderLB.setVisible(false);
                        ProjectLeaderCB.setVisible(false);
                    }



                } else {
                    TeamCB.setEnabled(true);
                    TeamLB.setVisible(false);
                    TeamCB.setVisible(false);
                    ProjectLeaderLB.setVisible(false);
                    ProjectLeaderCB.setVisible(false);

                    if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("JUNIOR EXECUTIVE")) {
                        TeamLB.setVisible(true);
                        TeamCB.setVisible(true);
                    }

                }





            }

        }
    };
    FocusListener fl = new FocusListener() {
        @Override
        public void focusGained(FocusEvent e) {
        }

        @Override
        public void focusLost(FocusEvent e) {
        }
    };
    
   

    void clear() {
        EmpNameVal.setText("");
        MobileNoVal1.setText("");
        MobileNoVal2.setText("");
        EmailIdVal1.setText("");
        EmailIdVal2.setText("");
        dobVal.setText("");
        QualificationVal.setText("");
        AddressVal.setText("");
        JoinDateVal.setText("");
        DeptVal.setText("");
        DsgnVal.setText("");
        TeamVal.setText("");
        CityVal.setText("");
        UsernameVal.setText("");
        PasswordVal.setText("");
        ProjectLeaderVal.setText("");

    }

    boolean validation() {
        boolean flag = true;
        clear();

        if (EmpNameTF.getText().equals("")) {
            EmpNameVal.setText("Please enter Employee Name");
            flag = false;
        }
        if (MobileNoTF.getText().equals("")) {
            MobileNoVal1.setText("Please enter Mobile No");
            flag = false;
        }
        if (!MobileNoTF.getText().equals("") && !(new MobileValidator().validate(MobileNoTF.getText()))) {
            MobileNoVal2.setText("Please enter valid Mobile No");
            flag = false;
        }

        if (EmailIdTF.getText().equals("")) {
            EmailIdVal1.setText("Please enter Email Id");
            flag = false;
        }
        if (!EmailIdTF.getText().equals("") && !(new EmailValidator().validate(EmailIdTF.getText()))) {
            EmailIdVal2.setText("Please enter valid Email");
            flag = false;
        }
        if (dobDC.getDate() == null) {
            dobVal.setText("Please enter Date Of Birth");
            flag = false;
        }
        if (QualificationTF.getText().equals("")) {
            QualificationVal.setText("Please enter Qualification");
            flag = false;
        }
        if (AddressTA.getText().equals("")) {
            AddressVal.setText("Please enter Address");
            flag = false;
        }
        if (CityTF.getText().equals("")) {
            CityVal.setText("Please enter City");
            flag = false;
        }

        if (joinDateDC.getDate() == null) {
            JoinDateVal.setText("Please enter Joining Date");
            flag = false;
        }
        if (DeptCB.getSelectedIndex() == 0) {
            DeptVal.setText("Please enter Department");
            flag = false;
        }
        if (DsgnCB.getSelectedIndex() == 0) {
            DsgnVal.setText("Please enter Designation");
            flag = false;
        }

        /*if (TeamCB.getSelectedIndex() == 0) {
         TeamVal.setText("Please enter Team");
         flag = false;
         }*/
        if (UsernameTF.getText().equals("")) {
            UsernameVal.setText("Please enter Username");
            flag = false;
        }

        if (!UsernameTF.getText().equals("") && !(new UsernameValidator().validate(UsernameTF.getText()))) {
            UsernameVal.setText("Username is not unique");
            flag = false;
        }
        if (PasswordPF.getText().equals("")) {
            PasswordVal.setText("Please enter Password");
            flag = false;
        }


        if (TeamCB.isVisible() && TeamCB.getSelectedIndex() == 0) {
            TeamVal.setText("Please enter Team");
            flag = false;
        }

        if (ProjectLeaderCB.isVisible() && ProjectLeaderCB.getSelectedIndex() == 0) {
            ProjectLeaderVal.setText("Please enter Project Manager");
            flag = false;
        }

        if (ProjectLeaderLB.getText().contains("No Project Manager in ")) {
            ProjectLeaderVal.setText("You must have a project leader");
            flag = false;
        }



        return flag;
    }
}
