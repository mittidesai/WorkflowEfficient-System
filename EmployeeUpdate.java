package wfes;

import Conversion.UtilToSql;
import dal.*;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.SwingUtilities;
import to.*;
import validation.*;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author 01
 */
public class EmployeeUpdate extends javax.swing.JPanel {

    /**
     * Creates new form AddEmployee
     */
    Employee employee = null;
    int delflag = 0;

    public EmployeeUpdate() {
        initComponents();
        clear();

        fillComboDataDept(DeptCB);
        fillComboDataDsgn(DsgnCB);
        fillComboDataTeam(TeamCB);
        UpdateButton.addActionListener(al);
    }

    public EmployeeUpdate(Employee employee) {
        initComponents();
        clear();
        fillComboDataDept(DeptCB);
        fillComboDataDsgn(DsgnCB);
        fillComboDataTeam(TeamCB);
        ProjectLeaderCB.setVisible(false);
        ProjectLeaderLB.setVisible(false);
        ProjectLeaderVal.setVisible(false);




        this.employee = employee;
        EmpNameTF.setText(employee.getEmpName());
        MobileNoTF.setText(employee.getMobileNo().toString());
        EmailIdTF.setText(employee.getEmailId());
        dobDC.setDate(employee.getDob());
        QualificationTF.setText(employee.getQualification());
        UsernameTF.setText(employee.getUsername());
        PasswordPF.setText(employee.getPassword());
        AddressTA.setText(employee.getAddress());
        joinDateDC.setDate(employee.getJoinDate());
        CityTF.setText(employee.getCity());
        
        if(employee.getGender()==1){
            maleRB.setSelected(true);
        }else if(employee.getGender()==2){
            femaleRB.setSelected(true);
        }

        int itemCountDept = DeptCB.getItemCount();
        for (int i = 1; i < itemCountDept; i++) {
            if (DeptCB.getItemAt(i).toString().equals(employee.getDeptId() + "")) {
                DeptCB.setSelectedIndex(i);
            }
        }
        int itemCountDsgn = DsgnCB.getItemCount();
        for (int i = 1; i < itemCountDsgn; i++) {
            if (DsgnCB.getItemAt(i).toString().equals(employee.getDsgnId() + "")) {
                DsgnCB.setSelectedIndex(i);
            }
        }
        int itemCountTeam = TeamCB.getItemCount();
        for (int i = 1; i < itemCountTeam; i++) {
            if (TeamCB.getItemAt(i).toString().equals(employee.getTeamId() + "")) {
                TeamCB.setSelectedIndex(i);
            }
        }


        if (employee.getDsgnId().getDsgnTitle().equals("ASSISTANT MANAGER")) {
            delflag = 1;
            ProjectLeaderCB.setVisible(true);
            ProjectLeaderLB.setVisible(true);

            fillComboDataProjectLeader();

            Employee plid = null;
            List<PlTl> plTlList = new PlTlDal().getPlTlDetails();
            PlTl plTlTempFinal = null;
            for (PlTl plTlTemp : plTlList) {

                if (plTlTemp.getTlId().getEmpId() == employee.getEmpId()) {

                    plid = plTlTemp.getPlId();
                }
            }


            int itemCount = ProjectLeaderCB.getItemCount();
            for (int i = 1; i < itemCount; i++) {

                if (((Employee) ProjectLeaderCB.getItemAt(i)).getEmpId() == plid.getEmpId()) {
                    ProjectLeaderCB.setSelectedIndex(i);
                }
            }
        }



        DeptCB.setEnabled(false);
        DsgnCB.setEnabled(false);
        TeamCB.setEnabled(false);
        ProjectLeaderCB.setEnabled(false);

        UpdateButton.addActionListener(al);
        UpdateButton.addKeyListener(kl);
        DsgnCB.addItemListener(il);
        UpdateButton.setNextFocusableComponent(WorkFlowEfficient.wfes.getjMenuBar1());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        UsernameTF = new javax.swing.JTextField();
        EmpNameVal = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        EmailIdVal1 = new javax.swing.JLabel();
        CityTF = new javax.swing.JTextField();
        DeptCB = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        PasswordPF = new javax.swing.JPasswordField();
        TeamCB = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        dobDC = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        EmailIdVal2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        joinDateDC = new com.toedter.calendar.JDateChooser();
        QualificationTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        AddressTA = new javax.swing.JTextArea();
        DsgnCB = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        TeamVal = new javax.swing.JLabel();
        DsgnVal = new javax.swing.JLabel();
        EmailIdTF = new javax.swing.JTextField();
        MobileNoVal2 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        TeamLB = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        MobileNoTF = new javax.swing.JTextField();
        EmpNameTF = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        MobileNoVal1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dobVal = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        QualificationVal = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AddressVal = new javax.swing.JLabel();
        CityVal = new javax.swing.JLabel();
        JoinDateVal = new javax.swing.JLabel();
        DeptVal = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        UsernameVal = new javax.swing.JLabel();
        PasswordVal = new javax.swing.JLabel();
        ProjectLeaderLB = new javax.swing.JLabel();
        ProjectLeaderCB = new javax.swing.JComboBox();
        ProjectLeaderVal = new javax.swing.JLabel();
        GENDER = new javax.swing.JLabel();
        UpdateButton = new javax.swing.JButton();
        maleRB = new javax.swing.JRadioButton();
        femaleRB = new javax.swing.JRadioButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        EmpNameVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        EmpNameVal.setForeground(new java.awt.Color(255, 0, 0));
        EmpNameVal.setText("EmpNameVal");

        jLabel15.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(86, 86, 87));
        jLabel15.setText("Password:");

        EmailIdVal1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        EmailIdVal1.setForeground(new java.awt.Color(255, 0, 0));
        EmailIdVal1.setText("EmailIDVal1");

        DeptCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(86, 86, 87));
        jLabel4.setText("Date Of Birth :");

        TeamCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(86, 86, 87));
        jLabel3.setText("Email_ID :");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(86, 86, 87));
        jLabel2.setText("Mobile No :");

        EmailIdVal2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        EmailIdVal2.setForeground(new java.awt.Color(255, 0, 0));
        EmailIdVal2.setText("EmailIdVal2");

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(86, 86, 87));
        jLabel1.setText("Employee Name :");

        jLabel14.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(86, 86, 87));
        jLabel14.setText("Username:");

        jLabel13.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(86, 86, 87));
        jLabel13.setText("Update Employee Form");

        AddressTA.setColumns(20);
        AddressTA.setRows(5);
        jScrollPane1.setViewportView(AddressTA);

        DsgnCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel16.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(86, 86, 87));
        jLabel16.setText("Personal Details");

        jLabel17.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(86, 86, 87));
        jLabel17.setText("Contact Details");

        jLabel18.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(86, 86, 87));
        jLabel18.setText("Login Details");

        TeamVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        TeamVal.setForeground(new java.awt.Color(255, 0, 0));
        TeamVal.setText("TeamVal");

        DsgnVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        DsgnVal.setForeground(new java.awt.Color(255, 0, 0));
        DsgnVal.setText("DsgnVal");

        MobileNoVal2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        MobileNoVal2.setForeground(new java.awt.Color(255, 0, 0));
        MobileNoVal2.setText("MobileNoVal2");

        jLabel19.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(86, 86, 87));
        jLabel19.setText("Organizational Details");

        TeamLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        TeamLB.setForeground(new java.awt.Color(86, 86, 87));
        TeamLB.setText("Team :");

        jLabel10.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(86, 86, 87));
        jLabel10.setText("Designation :");

        EmpNameTF.setFocusAccelerator('E');

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(86, 86, 87));
        jLabel6.setText("Address :");

        MobileNoVal1.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        MobileNoVal1.setForeground(new java.awt.Color(255, 0, 0));
        MobileNoVal1.setText("MobileNoVal1");

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(86, 86, 87));
        jLabel7.setText("City :");

        dobVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        dobVal.setForeground(new java.awt.Color(255, 0, 0));
        dobVal.setText("dobVal");

        jLabel8.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(86, 86, 87));
        jLabel8.setText("Join Date :");

        QualificationVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        QualificationVal.setForeground(new java.awt.Color(255, 0, 0));
        QualificationVal.setText("QualificationVal");

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(86, 86, 87));
        jLabel9.setText("Department :");

        AddressVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        AddressVal.setForeground(new java.awt.Color(255, 0, 0));
        AddressVal.setText("AddressVal");

        CityVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        CityVal.setForeground(new java.awt.Color(255, 0, 0));
        CityVal.setText("CityVal");

        JoinDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        JoinDateVal.setForeground(new java.awt.Color(255, 0, 0));
        JoinDateVal.setText("JoinDateVal");

        DeptVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        DeptVal.setForeground(new java.awt.Color(255, 0, 0));
        DeptVal.setText("DeptVal");

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(86, 86, 87));
        jLabel5.setText("Qualification :");

        UsernameVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        UsernameVal.setForeground(new java.awt.Color(255, 0, 0));
        UsernameVal.setText("UsernameVal");

        PasswordVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        PasswordVal.setForeground(new java.awt.Color(255, 0, 0));
        PasswordVal.setText("PasswordVal");

        ProjectLeaderLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 11)); // NOI18N
        ProjectLeaderLB.setForeground(new java.awt.Color(86, 86, 87));
        ProjectLeaderLB.setText("Project Leader:");

        ProjectLeaderCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        ProjectLeaderVal.setForeground(new java.awt.Color(255, 0, 0));
        ProjectLeaderVal.setText("ProjectLeaderVal");

        GENDER.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        GENDER.setText("GENDER :");

        UpdateButton.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(86, 86, 87));
        UpdateButton.setText("Update Employee");

        buttonGroup1.add(maleRB);
        maleRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        maleRB.setText("Male");

        buttonGroup1.add(femaleRB);
        femaleRB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        femaleRB.setText("Female");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(GENDER))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(maleRB)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(femaleRB))
                                    .addComponent(EmailIdTF)
                                    .addComponent(MobileNoTF)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                                    .addComponent(CityTF)
                                    .addComponent(dobDC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EmpNameTF))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(EmpNameVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(joinDateDC, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(JoinDateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(QualificationTF, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(QualificationVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGap(50, 50, 50))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(MobileNoVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(CityVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(DeptCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addComponent(TeamLB)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(ProjectLeaderLB)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ProjectLeaderCB, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(DeptVal, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(4, 4, 4)
                                                .addComponent(TeamVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(49, 49, 49)))))
                                .addGap(148, 148, 148)
                                .addComponent(ProjectLeaderVal, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dobVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(AddressVal, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel10)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(TeamCB, 0, 148, Short.MAX_VALUE)
                                            .addComponent(DsgnCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(DsgnVal, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(EmailIdVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(MobileNoVal2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(EmailIdVal1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(1, 1, 1)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(UsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(PasswordPF, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(UsernameVal)
                                            .addComponent(PasswordVal))))
                                .addGap(121, 121, 121))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(106, 106, 106)
                        .addComponent(jLabel13)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1172, 1172, 1172)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(172, 172, 172))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(566, 566, 566)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(543, 543, 543)
                        .addComponent(UpdateButton)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(7, 7, 7)
                        .addComponent(jLabel19)
                        .addGap(9, 9, 9))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(EmpNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EmpNameVal)
                            .addComponent(jLabel5)
                            .addComponent(QualificationTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(QualificationVal))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel4)
                                .addGap(78, 78, 78)
                                .addComponent(jLabel6))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(joinDateDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(JoinDateVal))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(CityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(CityVal))
                                            .addComponent(jLabel7))
                                        .addGap(20, 20, 20)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(AddressVal)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(DeptCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(DeptVal))
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel10)
                                            .addComponent(DsgnCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(DsgnVal)))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dobVal)
                            .addComponent(dobDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TeamLB)
                    .addComponent(TeamCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TeamVal))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maleRB)
                    .addComponent(femaleRB)
                    .addComponent(GENDER))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ProjectLeaderLB)
                    .addComponent(ProjectLeaderCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ProjectLeaderVal))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(MobileNoVal1)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(MobileNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MobileNoVal2)
                    .addComponent(jLabel14)
                    .addComponent(UsernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UsernameVal))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(EmailIdVal1)
                            .addComponent(jLabel15)
                            .addComponent(PasswordPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PasswordVal))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(EmailIdTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(EmailIdVal2)))
                .addGap(18, 18, 18)
                .addComponent(UpdateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 223, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(57, 57, 57))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 948, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AddressTA;
    private javax.swing.JLabel AddressVal;
    private javax.swing.JTextField CityTF;
    private javax.swing.JLabel CityVal;
    private javax.swing.JComboBox DeptCB;
    private javax.swing.JLabel DeptVal;
    private javax.swing.JComboBox DsgnCB;
    private javax.swing.JLabel DsgnVal;
    private javax.swing.JTextField EmailIdTF;
    private javax.swing.JLabel EmailIdVal1;
    private javax.swing.JLabel EmailIdVal2;
    private javax.swing.JTextField EmpNameTF;
    private javax.swing.JLabel EmpNameVal;
    private javax.swing.JLabel GENDER;
    private javax.swing.JLabel JoinDateVal;
    private javax.swing.JTextField MobileNoTF;
    private javax.swing.JLabel MobileNoVal1;
    private javax.swing.JLabel MobileNoVal2;
    private javax.swing.JPasswordField PasswordPF;
    private javax.swing.JLabel PasswordVal;
    private javax.swing.JComboBox ProjectLeaderCB;
    private javax.swing.JLabel ProjectLeaderLB;
    private javax.swing.JLabel ProjectLeaderVal;
    private javax.swing.JTextField QualificationTF;
    private javax.swing.JLabel QualificationVal;
    private javax.swing.JComboBox TeamCB;
    private javax.swing.JLabel TeamLB;
    private javax.swing.JLabel TeamVal;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JTextField UsernameTF;
    private javax.swing.JLabel UsernameVal;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.toedter.calendar.JDateChooser dobDC;
    private javax.swing.JLabel dobVal;
    private javax.swing.JRadioButton femaleRB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser joinDateDC;
    private javax.swing.JRadioButton maleRB;
    // End of variables declaration//GEN-END:variables

    public void updateButtonMethod()
    {
           if (validation()) {
                    Employee employeetemp = new Employee();
                    Department department = new Department();
                    Designation designation = new Designation();
                    Team team = new Team();

                    employeetemp.setEmpId(employee.getEmpId());
                    employeetemp.setEmpName(EmpNameTF.getText());
                    employeetemp.setMobileNo(Long.parseLong(MobileNoTF.getText()));
                    employeetemp.setEmailId(EmailIdTF.getText());
                    employeetemp.setDob(new UtilToSql().convertUtilToSql(dobDC.getDate()));
                    employeetemp.setQualification(QualificationTF.getText());
                    employeetemp.setUsername(UsernameTF.getText());
                    employeetemp.setPassword(PasswordPF.getText());
                    employeetemp.setAddress(AddressTA.getText());
                    employeetemp.setJoinDate(new UtilToSql().convertUtilToSql(joinDateDC.getDate()));
                    employeetemp.setCity(CityTF.getText());
                    if(maleRB.isSelected()){
                        employeetemp.setGender(1);
                    }else if (femaleRB.isSelected()){
                        employeetemp.setGender(2);
                    }
                                

                  
                    department = (Department) DeptCB.getSelectedItem();
                    employeetemp.setDeptId(department);

                    designation = (Designation) DsgnCB.getSelectedItem();
                    employeetemp.setDsgnId(designation);

                    team = (Team) TeamCB.getSelectedItem();
                    employeetemp.setTeamId(team);


                   


                    int i = new EmployeeDAL().updateEmployeeDetails(employeetemp);

                    Window w = SwingUtilities.getWindowAncestor(popup.popup.employeeUpdate);
                    w.setVisible(false);



                  




                    System.out.println("Done");

                }
    }
    void fillComboDataDept(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Department> departmentList = new DepartmentDAL().getDepartmentDetails();
        Department departmentTempFinal = null;
        for (Department departmentTemp : departmentList) {

            vector.add(departmentTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataDsgn(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Designation> designationList = new DesignationDAL().getDesignationDetails();
        Designation designationTempFinal = null;
        for (Designation designationTemp : designationList) {

            vector.add(designationTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataTeam(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Team> teamList = new TeamDAL().getTeamDetails();
        Team teamTempFinal = null;
        for (Team teamTemp : teamList) {

            vector.add(teamTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataProjectLeader() {
        int flag = 0;
        Vector vector = new Vector();
        vector.add("Please Enter");
        Department department;
        System.out.println("Here:" + DeptCB.getSelectedItem());
        department = (Department) (DeptCB.getSelectedItem());

        Employee employeeTempFinal = null;
        List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();

        for (Employee employeeTemp : employeeList) {

            if (employeeTemp.getDeptId().getDeptId() == department.getDeptId() && employeeTemp.getDsgnId().getDsgnId() == 4) {
                employeeTempFinal = employeeTemp;
                vector.add(employeeTempFinal);
                flag = 0;
                break;
            } else {
                flag = 1;
            }
        }

        if (flag == 1) {
            ProjectLeaderLB.setText("No Project Manager in " + department.getDeptName());
            Vector vector1 = new Vector();
            vector1.add("No Project Manager");
            ComboBoxModel cbm = new DefaultComboBoxModel(vector1);
            ProjectLeaderCB.setModel(cbm);
            ProjectLeaderCB.setSelectedIndex(-1);
            ProjectLeaderCB.setVisible(false);
        }


        if (flag == 0) {
            ProjectLeaderLB.setText("Project Manager:");
            ComboBoxModel cbm = new DefaultComboBoxModel(vector);
            ProjectLeaderCB.setModel(cbm);
        }

    }
    ActionListener al = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (e.getSource() == UpdateButton) {
             updateButtonMethod();
            }
        }
    };
    
     KeyListener kl = new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource() == UpdateButton && e.getKeyCode() == KeyEvent.VK_ENTER) {
                updateButtonMethod();
            }
            
        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };
    ItemListener il = new ItemListener() {
        @Override
        public void itemStateChanged(ItemEvent e) {






            if (e.getSource() == DsgnCB) {






                if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("GENERAL MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("DEPUTY GENERAL MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("PROJECT MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ASSISTANT MANAGER") || ((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ADMINISTRATOR")) {


                    Team teamTempFinal = null;
                    List<Team> teamList = new TeamDAL().getTeamDetails();

                    for (Team teamTemp : teamList) {

                        if (teamTemp.getTeamName().equals("MANAGEMENT")) {
                            teamTempFinal = teamTemp;
                        }
                    }
                    System.out.println("check" + teamTempFinal.getTeamId());
                    //TeamCB.setSelectedIndex(2);
                    TeamCB.setSelectedItem(teamTempFinal);
                    //TeamCB.setEnabled(false);

                    if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("ASSISTANT MANAGER")) {
                        ProjectLeaderLB.setVisible(true);
                        ProjectLeaderCB.setVisible(true);
                        fillComboDataProjectLeader();

                    } else {
                        ProjectLeaderLB.setVisible(false);
                        ProjectLeaderCB.setVisible(false);
                    }



                } else {
                    TeamCB.setEnabled(true);
                    TeamLB.setVisible(false);
                    TeamCB.setVisible(false);
                    ProjectLeaderLB.setVisible(false);
                    ProjectLeaderCB.setVisible(false);

                    if (((Designation) DsgnCB.getSelectedItem()).getDsgnTitle().toString().equals("JUNIOR EXECUTIVE")) {
                        TeamLB.setVisible(true);
                        TeamCB.setVisible(true);
                    }

                }





            }

        }
    };
    FocusListener fl = new FocusListener() {
        @Override
        public void focusGained(FocusEvent e) {
            throw new UnsupportedOperationException("Not supported yet.");
        }

        @Override
        public void focusLost(FocusEvent e) {
            throw new UnsupportedOperationException("Not supported yet.");
        }
    };

    void clear() {
        EmpNameVal.setText("");
        MobileNoVal1.setText("");
        MobileNoVal2.setText("");
        EmailIdVal1.setText("");
        EmailIdVal2.setText("");
        dobVal.setText("");
        QualificationVal.setText("");
        AddressVal.setText("");
        JoinDateVal.setText("");
        DeptVal.setText("");
        DsgnVal.setText("");
        TeamVal.setText("");
        CityVal.setText("");
        UsernameVal.setText("");
        PasswordVal.setText("");
        ProjectLeaderVal.setText("");
    }

    boolean validation() {
        boolean flag = true;
        clear();

        if (EmpNameTF.getText().equals("")) {
            EmpNameVal.setText("Please enter Employee Name");
            flag = false;
        }
        if (MobileNoTF.getText().equals("")) {
            MobileNoVal1.setText("Please enter Mobile No");
            flag = false;
        }
        if (!MobileNoTF.getText().equals("") && !(new MobileValidator().validate(MobileNoTF.getText()))) {
            MobileNoVal2.setText("Please enter valid Mobile No");
            flag = false;
        }

        if (EmailIdTF.getText().equals("")) {
            EmailIdVal1.setText("Please enter Email Id");
            flag = false;
        }
        if (!EmailIdTF.getText().equals("") && !(new EmailValidator().validate(EmailIdTF.getText()))) {
            EmailIdVal2.setText("Please enter valid Email");
            flag = false;
        }
        if (dobDC.getDate() == null) {
            dobVal.setText("Please enter Date Of Birth");
            flag = false;
        }
        if (QualificationTF.getText().equals("")) {
            QualificationVal.setText("Please enter Qualification");
            flag = false;
        }
        if (AddressTA.getText().equals("")) {
            AddressVal.setText("Please enter Address");
            flag = false;
        }
        if (CityTF.getText().equals("")) {
            CityVal.setText("Please enter City");
            flag = false;
        }

        if (joinDateDC.getDate() == null) {
            JoinDateVal.setText("Please enter Joining Date");
            flag = false;
        }
        if (DeptCB.getSelectedIndex() == -1) {
            DeptVal.setText("Please enter Department");
            flag = false;
        }
        if (DsgnCB.getSelectedIndex() == -1) {
            DsgnVal.setText("Please enter Designation");
            flag = false;
        }
        if (TeamCB.getSelectedIndex() == -1) {
            TeamVal.setText("Please enter Team");
            flag = false;
        }


        return flag;
    }
}
