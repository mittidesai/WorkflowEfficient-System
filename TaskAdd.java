/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package wfes;

import Conversion.UtilToSql;
import dal.ConnectionDAL;
import dal.EmployeeDAL;
import dal.PlTlDal;
import dal.PriorityDAL;
import dal.ProjEmpDal;
import dal.ProjectDAL;
import dal.StatusDAL;
import dal.TaskDAL;
import dal.TaskDeptDAL;
import email.EmailClass;
import email.EmailDetails;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import to.Employee;
import to.PlTl;
import to.Priority;
import to.ProjEmp;
import to.Project;
import to.Status;
import to.Task;
import to.TaskDept;

/**
 *
 * @author hp pav 15-e015tx
 */
public class TaskAdd extends javax.swing.JPanel {

    Task task = null;
    Connection connection = new ConnectionDAL().getConnection();

    /**
     * Creates new form TaskAdd
     */
    public TaskAdd() {
        initComponents();
        clear();
        //  fillComboDataStatus(StatusCB);
        fillComboDataPriority(PriorityCB);
        fillComboDataProject(projCB);


        if (LogIn.localempid.getDeptId().getDeptId() == 1) {
            taskCB.setVisible(false);
            taskVal.setVisible(false);
            taskLB.setVisible(false);
            lastdateDC.setEnabled(true);
            lastdateVal.setEnabled(true);
        } else {
            titleLB.setVisible(false);
            TitleTF.setVisible(false);
            titleVal.setVisible(false);
            descriptionLB.setVisible(false);
            DescriptionTA.setVisible(false);
            descriptionVal.setVisible(false);
            DescriptionSP.setVisible(false);
            lastdateDC.setEnabled(false);
            lastdateVal.setVisible(false);
            durVal.setVisible(false);

        }


        lastdateVal.setVisible(false);
            durVal.setVisible(false);

        projCB.addActionListener(al);
        taskCB.addActionListener(al);
        AddButton.addActionListener(al);
        AddButton.addKeyListener(kl);
        AddButton.setNextFocusableComponent(WorkFlowEfficient.wfes.getjMenuBar1());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        AddButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        emailMSG = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        projCB = new javax.swing.JComboBox();
        descriptionLB = new javax.swing.JLabel();
        taskCB = new javax.swing.JComboBox();
        TitleTF = new javax.swing.JTextField();
        taskVal = new javax.swing.JLabel();
        descriptionVal = new javax.swing.JLabel();
        titleVal = new javax.swing.JLabel();
        DescriptionSP = new javax.swing.JScrollPane();
        DescriptionTA = new javax.swing.JTextArea();
        titleLB = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        taskLB = new javax.swing.JLabel();
        projVal = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        durTF = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        durVal = new javax.swing.JLabel();
        lastdateDC = new com.toedter.calendar.JDateChooser();
        lastdateVal = new javax.swing.JLabel();
        EndDateDC = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        PriorityCB = new javax.swing.JComboBox();
        priorityVal = new javax.swing.JLabel();
        endDateVal = new javax.swing.JLabel();
        StartDateDC = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        startDateVal = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        AddButton.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 14)); // NOI18N
        AddButton.setForeground(new java.awt.Color(86, 86, 87));
        AddButton.setText("Add");

        jLabel1.setFont(new java.awt.Font("Copperplate Gothic Light", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(86, 86, 87));
        jLabel1.setText("Add Task Details");

        emailMSG.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        emailMSG.setText("jLabel4");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        projCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        projCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        projCB.setNextFocusableComponent(taskCB);

        descriptionLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        descriptionLB.setText("Description :");

        taskCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        taskCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        taskCB.setNextFocusableComponent(TitleTF);

        TitleTF.setNextFocusableComponent(DescriptionTA);

        taskVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        taskVal.setForeground(new java.awt.Color(255, 0, 0));
        taskVal.setText("jLabel11");

        descriptionVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        descriptionVal.setForeground(new java.awt.Color(255, 0, 0));
        descriptionVal.setText("jLabel16");

        titleVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        titleVal.setForeground(new java.awt.Color(255, 0, 0));
        titleVal.setText("jLabel15");

        DescriptionTA.setColumns(20);
        DescriptionTA.setRows(5);
        DescriptionTA.setNextFocusableComponent(StartDateDC);
        DescriptionSP.setViewportView(DescriptionTA);

        titleLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        titleLB.setText("Title :");

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel2.setText("Project:");

        taskLB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        taskLB.setText("Task:");

        projVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        projVal.setForeground(new java.awt.Color(255, 0, 0));
        projVal.setText("jLabel5");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                    .addComponent(taskLB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(taskCB, 0, 245, Short.MAX_VALUE)
                                        .addComponent(projCB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(projVal, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(taskVal, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(titleLB, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(titleVal, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(descriptionLB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(descriptionVal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(DescriptionSP, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(projCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(projVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskLB)
                    .addComponent(taskCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(taskVal)
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(titleLB)
                    .addComponent(TitleTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(titleVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionLB)
                    .addComponent(DescriptionSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(descriptionVal)
                .addGap(17, 17, 17))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        durTF.setNextFocusableComponent(AddButton);

        jLabel9.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel9.setText("Priority :");

        jLabel3.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel3.setText("Last_Date:");

        jLabel7.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel7.setText("End_Date :");

        durVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        durVal.setForeground(new java.awt.Color(255, 0, 0));
        durVal.setText("jLabel10");

        lastdateDC.setNextFocusableComponent(PriorityCB);

        lastdateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        lastdateVal.setForeground(new java.awt.Color(255, 0, 0));
        lastdateVal.setText("jLabel4");

        EndDateDC.setNextFocusableComponent(lastdateDC);

        jLabel5.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel5.setText("Duration:");

        PriorityCB.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        PriorityCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        PriorityCB.setNextFocusableComponent(durTF);

        priorityVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        priorityVal.setForeground(new java.awt.Color(255, 0, 0));
        priorityVal.setText("jLabel15");

        endDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        endDateVal.setForeground(new java.awt.Color(255, 0, 0));
        endDateVal.setText("jLabel19");

        StartDateDC.setNextFocusableComponent(EndDateDC);

        jLabel6.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        jLabel6.setText("Start_Date :");

        startDateVal.setFont(new java.awt.Font("Copperplate Gothic Light", 0, 12)); // NOI18N
        startDateVal.setForeground(new java.awt.Color(255, 0, 0));
        startDateVal.setText("jLabel18");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 84, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lastdateDC, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                            .addComponent(durTF)
                            .addComponent(lastdateVal, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(durVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(endDateVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(EndDateDC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                                    .addComponent(PriorityCB, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(priorityVal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(startDateVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(StartDateDC, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE))))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StartDateDC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(startDateVal)
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EndDateDC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(endDateVal)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lastdateDC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lastdateVal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(PriorityCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(priorityVal)
                .addGap(13, 13, 13)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(durTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(durVal)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(374, 374, 374)
                        .addComponent(AddButton)
                        .addGap(73, 73, 73)
                        .addComponent(emailMSG)))
                .addContainerGap(74, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(294, 294, 294))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddButton)
                    .addComponent(emailMSG, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JScrollPane DescriptionSP;
    private javax.swing.JTextArea DescriptionTA;
    private com.toedter.calendar.JDateChooser EndDateDC;
    private javax.swing.JComboBox PriorityCB;
    private com.toedter.calendar.JDateChooser StartDateDC;
    private javax.swing.JTextField TitleTF;
    private javax.swing.JLabel descriptionLB;
    private javax.swing.JLabel descriptionVal;
    private javax.swing.JTextField durTF;
    private javax.swing.JLabel durVal;
    private javax.swing.JLabel emailMSG;
    private javax.swing.JLabel endDateVal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private com.toedter.calendar.JDateChooser lastdateDC;
    private javax.swing.JLabel lastdateVal;
    private javax.swing.JLabel priorityVal;
    private javax.swing.JComboBox projCB;
    private javax.swing.JLabel projVal;
    private javax.swing.JLabel startDateVal;
    private javax.swing.JComboBox taskCB;
    private javax.swing.JLabel taskLB;
    private javax.swing.JLabel taskVal;
    private javax.swing.JLabel titleLB;
    private javax.swing.JLabel titleVal;
    // End of variables declaration//GEN-END:variables

    public void addButtonMethod() {
        System.out.println("in add");

        for (int k = 0; k < emailList.length; k++) {
            emailList[k] = null;
        }
        //if (validation()) {


        Task tasktemp = new Task();

        if (LogIn.localempid.getDeptId().getDeptId() == 1) {
            System.out.println("in dept 1");



            tasktemp.setTitle(TitleTF.getText());
            tasktemp.setDescription(DescriptionTA.getText());

            tasktemp.setStartDate(new UtilToSql().convertUtilToSql(StartDateDC.getDate()));
            tasktemp.setEndDate(new UtilToSql().convertUtilToSql(EndDateDC.getDate()));
            // tasktemp.setStatus(((Status) StatusCB.getSelectedItem()).getStatusId());
            tasktemp.setPriority(((Priority) PriorityCB.getSelectedItem()).getPriId());
            tasktemp.setProjId((Project) projCB.getSelectedItem());
            tasktemp.setLastDate(new UtilToSql().convertUtilToSql(lastdateDC.getDate()));

            tasktempemail = tasktemp;

            cid = 0;
            cid = new TaskDAL().addTaskDetails(tasktemp);
        }

        TaskDept taskDept = new TaskDept();
        taskDept.setStartDate(new UtilToSql().convertUtilToSql(StartDateDC.getDate()));
        taskDept.setEndDate(new UtilToSql().convertUtilToSql(EndDateDC.getDate()));
        taskDept.setDeptId(LogIn.localempid.getDeptId());
        taskDept.setDur(Integer.parseInt(durTF.getText()));
        Task task1 = new Task();
        if (LogIn.localempid.getDeptId().getDeptId() == 1) {
            task1.setTaskId(cid);
        } else {
            task1.setTaskId(((Task) taskCB.getSelectedItem()).getTaskId());
        }
        task1.setProjId((Project) projCB.getSelectedItem());
        taskDept.setTaskId(task1);


        new TaskDeptDAL().addTaskDeptDetails(taskDept);


        Connection connection = new ConnectionDAL().getConnection();
        Statement st22;
        int rowAdded = 0;
        try {
            st22 = connection.createStatement();
            String qry12 = "UPDATE `wfes`.`project` SET `STATUS`=1 WHERE `PROJ_ID`='" + taskDept.getTaskId().getProjId().getProjId() + "'";

            rowAdded = st22.executeUpdate(qry12);
            if (rowAdded == 1) {

                JOptionPane.showMessageDialog(null, "Status Updated Successfully");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }




//                    Employee employeeTempFinal = null;
//                    List<Employee> employeeList = new EmployeeDAL().getEmployeeDetails();
//                    String emailList[] = new String[50];
//                    int emlcnt = 0;
//
//                    for (Employee employeeTemp : employeeList) {
//
//                        if (employeeTemp.getDsgnId().getDsgnTitle().equals("Assistant Manager")) {
//                            emailList[emlcnt] = employeeTemp.getEmailId();
//                            emlcnt++;
//                        }
//                    }



        PlTl plTlTempFinal = null;
        List<PlTl> plTlList = new PlTlDal().getPlTlDetails();

        int emlcnt = 0;
        for (PlTl plTlTemp : plTlList) {

            if (plTlTemp.getPlId().getEmpId() == LogIn.localempid.getEmpId()) {
                emailList[emlcnt] = plTlTemp.getTlId().getEmailId();
                emlcnt++;
            }
        }

        SwingWorker worker = new SwingWorker<Void, Void>() {
            @Override
            protected Void doInBackground() throws Exception {

                emailMSG.setText("Kindly wait mail is being sent...");




                if (cid > 0) {
                    EmailDetails emailDetails = new EmailDetails();
                    emailDetails.setTo(emailList);
                    emailDetails.setFrom("workflowefficientsystem@gmail.com");
                    emailDetails.setSubject("New Project:" + tasktempemail.getTitle());
                    emailDetails.setMessage("Please allocate Task " + tasktempemail.getTitle() + " to Junior Executive");
                    new EmailClass().sendEmail(emailDetails);
                }


                System.out.println("Done");
                emailMSG.setText("Mail Sent");

                return null;
            }
        };

        worker.execute();

        // }
    }

    void fillComboDataProject(JComboBox jComboBox) {
        Vector vector = new Vector();
        vector.add("Please Enter");
        List<ProjEmp> projEmpList = new ProjEmpDal().getProjEmpDetails();

        for (ProjEmp projEmpTemp : projEmpList) {
            if (projEmpTemp.getProjId().getStatus() != 2 && projEmpTemp.getProjId().getDeleteFlag() == 0) {
                if (projEmpTemp.getEmpId().getEmpId() == LogIn.localempid.getEmpId()) {
                    vector.add(projEmpTemp.getProjId());
                }
            }
        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataTask() {
        Vector vector = new Vector();
        vector.add("Please Enter");
        Project p1 = (Project) projCB.getSelectedItem();


        List<Task> taskList = new TaskDAL().getTaskDetails();
        int taskCheck = 0;


        for (Task taskTemp : taskList) {

            if (taskTemp.getProjId().getProjId() == p1.getProjId()) {
                if (taskCheck == taskTemp.getTaskId()) {
                    continue;
                } else {
                    vector.add(taskTemp);
                    taskCheck = taskTemp.getTaskId();
                }
            }
        }


        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        taskCB.setModel(cbm);

    }

    void fillComboDataStatus(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Status> statusList = new StatusDAL().getStatusDetails();
        Status statusTempFinal = null;
        for (Status statusTemp : statusList) {

            vector.add(statusTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }

    void fillComboDataPriority(JComboBox jComboBox) {
        Vector vector = new Vector();
        List<Priority> priorityList = new PriorityDAL().getPriorityDetails();
        Priority priorityTempFinal = null;
        for (Priority priorityTemp : priorityList) {

            vector.add(priorityTemp);

        }
        ComboBoxModel cbm = new DefaultComboBoxModel(vector);
        jComboBox.setModel(cbm);

    }
    public static String emailList[] = new String[50];
    public static int cid = 0;
    public static Task tasktempemail = new Task();
    ActionListener al = new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {

          //  if (validation()) {




                if (e.getSource() == projCB) {
                    fillComboDataTask();
                }

                if (e.getSource() == taskCB) {
                    if (LogIn.localempid.getDeptId().getDeptId() != 1) {
                        Connection connection = new ConnectionDAL().getConnection();
                        try {
                            Statement st1 = connection.createStatement();
                            Task task = (Task) taskCB.getSelectedItem();
                            String qry2 = "select LAST_DATE from TASK where `TASK_ID`='" + task.getTaskId() + "'";
                            ResultSet rs2 = st1.executeQuery(qry2);
                            while (rs2.next()) {
                                lastdateDC.setEnabled(true);
                                lastdateDC.setDate(rs2.getDate(1));
                                lastdateDC.setEnabled(false);

                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                    }



//                for (int i = 2; i <= 4; i++) {
                    if (LogIn.localempid.getDeptId().getDeptId() != 1) {
                        Connection connection = new ConnectionDAL().getConnection();
                        try {
                            Statement st1 = connection.createStatement();
                            Task task = (Task) taskCB.getSelectedItem();
                            //int j=i-1;
                            int j = (LogIn.localempid.getDeptId().getDeptId() - 1);
                            String qry2 = "select END_DATE from TASKDEPT where `TASK_ID`='" + task.getTaskId() + "' and `DEPT_ID`='" + j + "';";
                            ResultSet rs2 = st1.executeQuery(qry2);

                            while (rs2.next()) {
                                StartDateDC.setDate(rs2.getDate(1));
                                StartDateDC.setEnabled(false);
                            }
                        } catch (Exception ex) {
                            ex.printStackTrace();
                        }

                    }
//                }

                }


                if (e.getSource() == AddButton) {
                    addButtonMethod();
                }
           // }
        }
    };
    KeyListener kl = new KeyListener() {
        @Override
        public void keyTyped(KeyEvent e) {
        }

        @Override
        public void keyPressed(KeyEvent e) {
            if (e.getSource() == AddButton && e.getKeyCode() == KeyEvent.VK_ENTER) {
                addButtonMethod();
            }

        }

        @Override
        public void keyReleased(KeyEvent e) {
        }
    };

    void clear() {

        titleVal.setText("");
        descriptionVal.setText("");
        projVal.setText("");
        startDateVal.setText("");
        endDateVal.setText("");
//        statusVal.setText("");
        priorityVal.setText("");
        taskVal.setText("");


    }

    boolean validation() {
        boolean flag = true;
        clear();






        if (StartDateDC.getDate() == null) {
            startDateVal.setText("Please enter Start Date");
            flag = false;
        }
        if (EndDateDC.getDate() == null) {
            endDateVal.setText("Please enter End Date");
            flag = false;
        }
        if (lastdateDC.getDate() == null) {
            lastdateVal.setText("Please select Last Date");
            flag = false;
        }
//        if (StatusCB.getSelectedIndex() == -1) {
        //    statusVal.setText("Please enter Status");
        // flag = false;
        // }
        if (PriorityCB.getSelectedIndex() == -1) {
            priorityVal.setText("Please enter Priority");
            flag = false;
        }
        if (durTF.getText().equals("")) {
            durVal.setText("Please enter Duration");
            flag = false;
        }
        if (projCB.getSelectedIndex() == 0) {
            projVal.setText("Please select Project");
            flag = false;
        }
        if (LogIn.localempid.getDeptId().getDeptId() == 1) {
            if (taskCB.getSelectedIndex() == -1) {
                taskVal.setText("Please enter Task");
                flag = false;
            }
        } else {
            if (TitleTF.getText().equals("")) {
                titleVal.setText("Please enter Title");
                flag = false;
            }
            if (DescriptionTA.getText().equals("")) {
                descriptionVal.setText("Please enter description");
                flag = false;
            }
        }





        return flag;
    }
}
